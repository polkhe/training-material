id: peptide-protein-id-oms
name: Peptide and Protein ID using OpenMS tools
description: >-
  Identifying the proteins contained in a sample is an important step in any
  proteomic experiment. However, in most settings, proteins are digested to
  peptides before the LC-MS/MS analysis, which will be done in this tour.
title_default: peptide-protein-id
steps:
  - title: Introduction
    content: >-
      Identifying the proteins contained in a sample is an important step in any
      proteomic experiment. However, in most settings, proteins are digested to
      peptides before the LC-MS/MS analysis, which will be done in this tour.
    backdrop: true
  - title: Introduction
    content: >-
      In this so-called “bottom-up” procedure, only peptide masses are measured.
      Therefore, protein identification cannot be performed directly from raw
      data, but is a multi-step process: <ul>
        <li>Raw data preparations</li>
        <li>Peptide-to-Spectrum matching</li>
        <li>Peptide inference</li>
        <li>Protein inference</li>
      </ul> A plethora of different software solutions exists for each step. In
      this tutorial, we will use <b>msconvert</b> for raw data conversion and
      tools from the <a href="https://openms.de/">OpenMS software suite</a> for
      all other steps. We will use one peptide search engine at first and later
      on show how to expand the workflow for using multiple search engines.
      Protein inference will be performed with the Fido algorithm (<a
      href="https://www.ncbi.nlm.nih.gov/pubmed/20712337">Serang et al, JPR,
      (2010)</a>). This tutorial covers peptide and protein
      <b>identification</b> only, but you may use the output of this tutorial
      for the <a
      href="https://galaxyproject.github.io/training-material/topics/proteomics/tutorials/protein-quant-sil/tutorial.html">tutorial
      on protein quantitation</a>.
    backdrop: true
  - title: Introduction
    content: >-
      It is generally recommended to use more than one peptide search engine and
      use the combined results for the final peptide inference (<a
      href="https://www.ncbi.nlm.nih.gov/pubmed/23720762">Shteynberg et al.,
      2013, Mol. Cell. Proteomics</a>). For an alternative ID pipeline using the
      <a href="https://compomics.com/">Compomics</a> tools <a
      href="https://compomics.github.io/projects/searchgui.html>SearchGUI</a>
      and <a
      href="https://compomics.github.io/projects/peptide-shaker.html">PeptideShaker</a>,
      please consult <a
      href="https://galaxyproject.github.io/training-material/topics/proteomics/tutorials/protein-id-sg-ps/tutorial.html">this
      tutorial</>. However, the latter tutorial does not allow to continue with
      the tutorial on protein quantitation.
    backdrop: true
  - title: Input data
    content: >-
      As an example dataset, we will use an LC-MS/MS analysis of HeLa cell
      lysate published in <a
      href="https://www.ncbi.nlm.nih.gov/pubmed/24678044">Vaudel et al., 2014,
      Proteomics</a>. Detailed information about the dataset can be found on <a
      href="https://www.ebi.ac.uk/pride/archive/projects/PXD000674">PRIDE</a>.
      For step 2 we will use a validated human Uniprot FASTA database with
      appended decoys. If you already completed the tutorial on <a
      href="https://galaxyproject.github.io/training-material/topics/proteomics/tutorials/database-handling/tutorial.html">Database
      Handling</a> you can use the constructed database including decoys. You
      can find a prepared database, as well as the input proteomics data in
      different file formats on <a
      href="https://zenodo.org/record/796184">Zenodo</a>.
    backdrop: true
  - title: History options
    element: '#history-options-button'
    content: >-
      We will start the analyses by creating a new history. Click on this button
      and then "Create New"
    placement: left
  - title: Preparing raw data
    content: >-
      Raw data conversion is the first step of any proteomic data analysis. The
      most common converter is MSConvert, the format to convert to is mzML.
      Search GUI takes only mgf format as input, but as we need the mzML format
      for several other tasks, we will convert to mzML first. Due to licensing
      reasons, MSConvert runs only on windows systems and will not work on most
      Galaxy servers.
    backdrop: true
  - title: Preparing raw data
    content: >-
      Depending on your machine settings, raw data will be generated either in
      profile mode or centroid mode. For most peptide search engines, the MS2
      data have to be converted to centroid mode, a process called “peak
      picking” or “centroiding”. Machine vendors offer algorithms to extract
      peaks from profile raw data. This is implemented in <b>msconvert</b>  and
      can be run in parallel to the mzML conversion. However, the OpenMS tool
      <b>PeakPickerHiRes</b>  is reported to generate slightly better results
      (<a href="https://www.ncbi.nlm.nih.gov/pubmed/17094243">Lange et al.,
      2006, Pac Symp Biocomput</a>) and is therefore recommended for
      quantitative studies (<a
      href="https://www.ncbi.nlm.nih.gov/pubmed/19953549">Vaudel et al., 2010,
      Proteomics</a>). If your data were generated on a low resolution mass
      spectrometer, use <b>PeakPickerWavelet</b> instead.
    backdrop: true
  - title: Preparing raw data
    content: >-
      We provide the <a href="https://zenodo.org/record/796184">input data</a>
      in the original raw format and also already converted to mgf and mzML file
      formats. If <b>msconvert</b> does not run on your Galaxy instance, please
      download the preconverted <b>mzML</b> as an input.
    backdrop: true
  - title: Uploading the new data
    element: '#tool-panel-upload-button .fa.fa-upload'
    content: We need to upload data. Open the Galaxy Upload Manager
    placement: right
    postclick:
      - '#tool-panel-upload-button .fa.fa-upload'
      - '#btn-reset'
  - title: Uploading the input data
    element: '#btn-new'
    content: Click on Paste/Fetch Data
    placement: right
    postclick:
      - '#btn-new'
  - title: Uploading the input data
    element: .upload-text-column .upload-text .upload-text-content.form-control
    content: >-
      Insert the link here.<br> Load the example dataset into your history from
      Zenodo: <a
      href="https://zenodo.org/record/892005/files/qExactive01819.raw">raw</a>
      <a
      href="https://zenodo.org/record/892005/files/qExactive01819_profile.mzml">mzML</a>
    placement: right
    textinsert: 'https://zenodo.org/record/892005/files/qExactive01819.raw'
  - title: Uploading the input data
    element: '#btn-start'
    content: Click on "Start" to start loading the data to history
    placement: right
    postclick:
      - '#btn-start'
  - title: Uploading the input data
    element: '#btn-close'
    content: >-
      The upload may take a while.<br> Hit the close button to close this
      window.
    placement: right
    postclick:
      - '#btn-close'
  - title: Rename the input data
    element: '.history-right-panel .list-items > *:first'
    content: >-
      The uploaded datasets is in the history, but its names corresponds to the
      link. We want to rename them it to Test data<br><br> <ul>
        <li>Click on the pencil icon beside the file to "Edit Attributes"</li>
        <li>Change the name in "Name" to get only the name of the sample</li>
      </ul>
    position: left
  - title: Preparing raw data
    element: '#tool-search-query'
    content: Search for msconvert tool to convert to mzML format
    placement: right
    textinsert: msconvert
  - title: Preparing raw data
    element: '#tool-search'
    content: Click on the "msconvert" tool to open it
    placement: right
    postclick:
      - >-
        a[href$="/tool_runner?tool_id=toolshed.g2.bx.psu.edu%2Frepos%2Fgalaxyp%2Fmsconvert_nix%2Fmsconvert_nix%2F3.0.9992.0"]
  - title: Preparing raw data
    element: '#tool-search'
    content: Execute the tool on the input data with default settings.
    position: left
  - title: Preparing raw data
    element: '#tool-search-query'
    content: Search for PeakPickerHiRes tool
    placement: right
    textinsert: PeakPickerHiRes
  - title: Preparing raw data
    element: '#tool-search'
    content: Click on the "PeakPickerHiRes" tool to open it
    placement: right
    postclick:
      - >-
        a[href$="/tool_runner?tool_id=toolshed.g2.bx.psu.edu%2Frepos%2Fgalaxyp%2Fopenms_peakpickerhires%2FPeakPickerHiRes%2F2.2.0"]
  - title: Preparing raw data
    element: '#tool-search'
    content: >-
      Execute the tool on the input data with <ul> <li>Click <b>+ Insert
      param.algorithm_ms_levels</b> and change the entry to “2”</li> </ul> Thus,
      peak picking will only be performed on MS2 level.
    position: left
  - title: Local Use of MSConvert
    content: >-
      The vendor libraries used by MSConvert are only licensed for Windows
      systems and are therefore rarely implemented in Galaxy instances. If
      <b>msconvert</b> is not available in your Galaxy instance, please install
      the software on a Windows computer and run the conversion locally. You can
      find a detailed description of the necessary steps <a
      href="http://genesis.ugent.be/files/costore/practicals/bioinformatics-for-proteomics/1-Peptide-and-Protein-Identification/1.2-Peak-List-Generation/1.2-Peak-List-Generation.pdf">here</a>.
      Afterwards, upload the resulting mzML file to your Galaxy history.
    backdrop: false
  - title: Peptide and Protein Identification
    content: >-
      MS/MS experiments identify peptides by isolating them and subsequently
      colliding them with a gas for fragmentation. This method generates a
      spectrum of peptide fragment masses for each isolated peptide - an MS2
      spectrum. To find out the peptide sequences, the MS2 spectrum is compared
      to a theoretical spectrum generated from a protein database. This step is
      called peptide-to-spectrum (also: spectrum-to-sequence) matching.
      Accordingly, a peptide that is successfully matched to a sequence is
      termed PSM (Peptide-Spectrum-Match). There can be multiple PSMs per
      peptide, if the peptide was fragmented several times.<br><br>Different
      peptide search engines have been developed to fulfill the matching
      procedure. Here, we will use the search engine <a
      href="https://www.ncbi.nlm.nih.gov/pubmed/14976030">X!Tandem</a>. OpenMS
      provides “adapters” (wrappers) for several other peptide search engines,
      like MSGF+ or OMSSA. You may replace the XTandemAdapter by another search
      engine of your choice.
    backdrop: true
  - title: Peptide and Protein Identification
    element: '#history-options-button'
    content: >-
      Copy the prepared protein database from the tutorial “Database handling”
      into your current history by using the multiple history view or upload the
      ready-made database from this <a
      href="https://zenodo.org/record/892005/files/Human_database_including_decoys_%28cRAP_and_Mycoplasma_added%29.fasta">link</a>.
    placement: left
  - title: Peptide and Protein Identification
    element: '#tool-search-query'
    content: >-
      Look for XTandemAdapter tool on the centroided mzML input file and the
      database file.
    placement: right
    textinsert: XTandemAdapter
  - title: Peptide and Protein Identification
    element: '#tool-search'
    content: Click on the "XTandemAdapter" tool to open it
    placement: right
    postclick:
      - >-
        a[href$="/tool_runner?tool_id=toolshed.g2.bx.psu.edu%2Frepos%2Fgalaxyp%2Fopenms_xtandemadapter%2FXTandemAdapter%2F2.2.0"]
  - title: Peptide and Protein Identification
    element: '#tool-search'
    content: >-
      Execute the tool with <ul> <li> Click <b>+ Insert
      param_fixed_modifications</b> and choose <b>Carbamidomethyl (C)</b></li>
      <li>click <b>+ Insert param_variable_modifications</b> and choose
      <b>Oxidation (M)</b></li> </ul>
    position: left
  - title: Peptide and Protein Identification
    element: '#tool-search-query'
    content: Look for FileInfo tool
    placement: right
    textinsert: FileInfo
  - title: Peptide and Protein Identification
    element: '#tool-search'
    content: Click on the "FileInfo" tool to open it
    placement: right
    postclick:
      - >-
        a[href$="/tool_runner?tool_id=toolshed.g2.bx.psu.edu%2Frepos%2Fgalaxyp%2Fopenms_fileinfo%2FFileInfo%2F2.2.0"]
  - title: Peptide and Protein Identification
    element: '#tool-search'
    content: Execute the tool on the XTandem output.
    position: left
  - title: Advanced Search Engine Parameters
    content: >-
      The OpenMS adapters do not always allow to set every option of the
      underlying search engine. If an option is missing, you may also run the
      search engine locally or by using a Galaxy wrapper. Afterward, convert the
      search engine output to the OpenMS format idXML by running
      <b>IDFileConverter</b>.

      The search engine X!Tandem features some more advanced options than the
      ones reflected in the <b>XTandemAdapter</b>. If you need those advanced
      options, the <b>XTandemAdapter</b> allows for the optional input of a
      classic X!Tandem parameter file. Upload your parameter file to the history
      and use it as an input in the field <b>Default X!Tandem configuration
      file</b>. You may also set the option <b>-ignore_adapter_param</b> to
      <b>Yes</b> to overwrite all options set by the GUI.
    backdrop: true
  - title: Peptide FDR filtering
    content: >-
      The next step of peptide identification is to decide which PSMs will be
      used for protein inference. Measured MS2 spectra never perfectly fit the
      theoretical spectra. Therefore, peptide search engines calculate a score
      which indicates how well the measured MS2 spectrum was fitting the
      theoretical spectrum. How do we decide which PSMs are likely true and
      which are false?<br><br>

      In proteomics, this decision is typically done by calculating false
      discovery rates (FDRs). Remember that the database we were using for
      peptide-to-spectrum matching consisted not only of true proteins, but also
      the same number of “fake entries”, the so-called decoys. Those decoys can
      now be used to estimate the number of false identifications in the list of
      PSMs. The calculation is based on a simple assumption: for every decoy
      protein identified with a given score, we expect on false positive with at
      least the same score. The false discovery rate is therefore defined as the
      number of false discoveries (decoy hits) divided by the number of false
      and correct discoveries (both target and decoy hits) at a given score
      threshold.
    backdrop: true
  - title: Peptide FDR filtering
    content: >-
      To calculate FDRs, we first have to annotate the identified peptides to
      determine which of them are decoys. This is done with the tool
      <b>PeptideIndexer</b>. Additionally, we will calculate peptide posterior
      error probabilities (PEPs), because they are needed for the protein
      inference algorithm used by OpenMS. We will then filter for 1 % FDR and
      set the score back to PEP.
    backdrop: true
  - title: Peptide FDR filtering
    element: '#tool-search-query'
    content: Look for IDPosteriorErrorProbability tool.
    placement: right
    textinsert: IDPosteriorErrorProbability
  - title: Peptide FDR filtering
    element: '#tool-search'
    content: Click on the "IDPosteriorErrorProbability" tool to open it
    placement: right
    postclick:
      - >-
        a[href$="/tool_runner?tool_id=toolshed.g2.bx.psu.edu%2Frepos%2Fgalaxyp%2Fopenms_idposteriorerrorprobability%2FIDPosteriorErrorProbability%2F2.2.0"]
  - title: Peptide FDR filtering
    element: '#tool-search'
    content: >-
      Execute the tool with <ul> <li>setting the option <b>-prob_correct</b> to
      <b>Yes</b></li></ul>
    position: left
  - title: Peptide FDR filtering
    element: '#tool-search-query'
    content: Look for PeptideIndexer tool.
    placement: right
    textinsert: PeptideIndexer
  - title: Peptide FDR filtering
    element: '#tool-search'
    content: Click on the "PeptideIndexer" tool to open it
    placement: right
    postclick:
      - >-
        a[href$="/tool_runner?tool_id=toolshed.g2.bx.psu.edu%2Frepos%2Fgalaxyp%2Fopenms_peptideindexer%2FPeptideIndexer%2F2.2.0"]
  - title: Peptide FDR filtering
    element: '#tool-search'
    content: >-
      Execute the tool with <ul> <li>setting <b>Specificity of the enzyme</b> to
      <b>none</b></li></ul>
    position: left
  - title: Peptide FDR filtering
    element: '#tool-search-query'
    content: Look for FalseDiscoveryRate tool.
    placement: right
    textinsert: FalseDiscoveryRate
  - title: Peptide FDR filtering
    element: '#tool-search'
    content: Click on the "FalseDiscoveryRate" tool to open it
    placement: right
    postclick:
      - >-
        a[href$="/tool_runner?tool_id=toolshed.g2.bx.psu.edu%2Frepos%2Fgalaxyp%2Fopenms_falsediscoveryrate%2FFalseDiscoveryRate%2F2.2.0"]
  - title: Peptide FDR filtering
    element: '#tool-search'
    content: >-
      Execute the tool with <ul> <li>setting <b>Perform FDR calculation on
      protein level</b> to <b>false</b></li> <li>setting <b>Filter PSMs based on
      q-value</b> to <b>0.01</b></li> <li>setting <b>add_decoy_peptides</b> to
      <b>Yes</b></ul>
    position: left
  - title: Peptide FDR filtering
    element: '#tool-search-query'
    content: Look for IDScoreSwitcher tool.
    placement: right
    textinsert: IDScoreSwitcher
  - title: Peptide FDR filtering
    element: '#tool-search'
    content: Click on the "IDScoreSwitcher" tool to open it
    placement: right
    postclick:
      - >-
        a[href$="/tool_runner?tool_id=toolshed.g2.bx.psu.edu%2Frepos%2Fgalaxyp%2Fopenms_idscoreswitcher%2FIDScoreSwitcher%2F2.2.0"]
  - title: Peptide FDR filtering
    element: '#tool-search'
    content: >-
      Execute the tool with <ul> <li>setting <b>Name of the meta value to use as
      the new score</b> to <b>Posterior Probability_score</b></li> <li>setting
      <b>Orientation of the new score</b> to <b>higher_better</b></ul>
    position: left
  - title: Peptide FDR filtering
    element: '#tool-search-query'
    content: Look for FileInfo tool.
    placement: right
    textinsert: FileInfo
  - title: Peptide FDR filtering
    element: '#tool-search'
    content: Click on the "FileInfo" tool to open it
    placement: right
    postclick:
      - >-
        a[href$="/tool_runner?tool_id=toolshed.g2.bx.psu.edu%2Frepos%2Fgalaxyp%2Fopenms_fileinfo%2FFileInfo%2F2.2.0"]
  - title: Peptide FDR filtering
    element: '#tool-search'
    content: >-
      Execute the tool on the output to get basic information about the
      identified peptides.
    position: left
  - title: Questions
    content: |-
      <ul>
        <li>How many peptides were identified?</li>
        <li>How many peptides with oxidized methionine were identified?</li>
      </ul>
    backdrop: false
  - title: Protein Inference
    content: >-
      In bottom-up proteomics, it is necessary to combine the identified
      peptides to proteins. This is not a trivial task, as proteins are
      redundant to some degree. Thus, not every peptide can be assigned to only
      one protein. The OpenMS suite implemented the <a
      href="https://www.ncbi.nlm.nih.gov/pubmed/20712337">Fido</a> algorithm for
      protein inference. Fido uses a Bayesian probabilistic model to group and
      score proteins based on peptide-spectrum matches.
    backdrop: true
  - title: Protein inference
    element: '#tool-search-query'
    content: Look for FidoAdapter tool.
    placement: right
    textinsert: FidoAdapter
  - title: Protein inference
    element: '#tool-search'
    content: Click on the "FidoAdapter" tool to open it
    placement: right
    postclick:
      - >-
        a[href$="/tool_runner?tool_id=toolshed.g2.bx.psu.edu%2Frepos%2Fgalaxyp%2Fopenms_fidoadapter%2FFidoAdapter%2F2.2.0"]
  - title: Protein inference
    element: '#tool-search'
    content: |-
      Execute the tool with
        <ul>
        <li>setting <b>-greedy_group_resolution</b> to <b>Yes</b></li>
        </ul>
    position: left
  - title: Protein inference
    element: '#tool-search-query'
    content: Look for FalseDiscoveryRate tool.
    placement: right
    textinsert: FalseDiscoveryRate
  - title: Protein inference
    element: '#tool-search'
    content: Click on the "FalseDiscoveryRate" tool to open it
    placement: right
    postclick:
      - >-
        a[href$="/tool_runner?tool_id=toolshed.g2.bx.psu.edu%2Frepos%2Fgalaxyp%2Fopenms_falsediscoveryrate%2FFalseDiscoveryRate%2F2.2.0"]
  - title: Protein inference
    element: '#tool-search'
    content: |-
      Execute the tool with
        <ul>
        <li>setting <b>Perform FDR calculation on PSM level</b> to <b>false</b></li>
        </ul>
    position: left
  - title: Protein inference
    element: '#tool-search-query'
    content: Look for IDFilter tool.
    placement: right
    textinsert: IDFilter
  - title: Protein inference
    element: '#tool-search'
    content: Click on the "IDFilter" tool to open it
    placement: right
    postclick:
      - >-
        a[href$="/tool_runner?tool_id=toolshed.g2.bx.psu.edu%2Frepos%2Fgalaxyp%2Fopenms_idfilter%2FIDFilter%2F2.2.0"]
  - title: Protein inference
    element: '#tool-search'
    content: |-
      Execute the tool with
        <ul>
        <li>setting <b>-prot</b> to <b>0.01</b></li>
        </ul>
    position: left
  - title: Peptide FDR filtering
    element: '#tool-search-query'
    content: Look for FileInfo tool.
    placement: right
    textinsert: FileInfo
  - title: Peptide FDR filtering
    element: '#tool-search'
    content: Click on the "FileInfo" tool to open it
    placement: right
    postclick:
      - >-
        a[href$="/tool_runner?tool_id=toolshed.g2.bx.psu.edu%2Frepos%2Fgalaxyp%2Fopenms_fileinfo%2FFileInfo%2F2.2.0"]
  - title: Peptide FDR filtering
    element: '#tool-search'
    content: >-
      Execute the tool on the output to get basic information about the
      identified peptides.
    position: left
  - title: “Greedy” Group Resolution
    content: >-
      Protein groups are reported, when an identified peptide maps to multiple
      proteins in the used database <a
      href="https://www.ncbi.nlm.nih.gov/pubmed/16009968">Nesvizhskii and
      Aebersold (2005)</a>. Some peptides may map to different protein groups
      and can therefore not be used for protein quantitation. The option
      -greedy_group_resolution solves this problem by assigning peptides only to
      the one most probable protein group, thus enabling to quantify proteins
      based not only on unique, but also on shared peptides. This usually leads
      to a much higher number of quantified proteins. However it will introduce
      noise in the FCs when a peptide was indeed shared by different proteins
      and the quantity of this peptide was a weighted sum of contributions. The
      greedy group resolution is similar to Occam’s razor.
    backdrop: true
  - title: Analysis of Contaminants
    content: >-
      The FASTA database used for the peptide to spectrum matching contained
      some entries that were not expected to stem from the HeLa cell lysate, but
      are common contaminations in LC-MS/MS samples. The main reason to add
      those is to avoid false assignment of the spectra to other proteins.
      However, it also enables you to check for contaminations in your samples.
      <b>CAVE</b>: in human samples, many proteins that are common contaminants
      may also stem from the real sample. Therefore, you do not have to exclude
      those proteins from further analysis, but you should verify the expression
      of these proteins in your sample.
    backdrop: true
  - title: Analysis of Contaminants
    element: '#tool-search-query'
    content: >-
      Look for TextExporter tool to convert the idXML output to a human-readable
      tabular file.
    placement: right
    textinsert: TextExporter
  - title: Analysis of Contaminants
    element: '#tool-search'
    content: Click on the "TextExporter" tool to open it
    placement: right
    postclick:
      - >-
        a[href$="/tool_runner?tool_id=toolshed.g2.bx.psu.edu%2Frepos%2Fgalaxyp%2Fopenms_textexporter%2FTextExporter%2F2.2.0"]
  - title: Analysis of Contaminants
    element: '#tool-search'
    content: Execute the tool with default settings.
    position: left
  - title: Analysis of Contaminants
    element: '#tool-search-query'
    content: Look for Select tool.
    placement: right
    textinsert: Select
  - title: Analysis of Contaminants
    element: '#tool-search'
    content: Click on the "Select" tool to open it
    placement: right
    postclick:
      - 'a[href$="/tool_runner?tool_id=Grep1"]'
  - title: Analysis of Contaminants
    element: '#tool-search'
    content: >-
      Execute the tool to select all lines <b>Matching</b> the pattern
      “CONTAMINANT”.
    position: left
  - title: Analysis of Contaminants
    content: >-
      Remove all bovine and mycoplasma proteins from your list by running Select
      tool again.
    backdrop: true
    textinsert: Select
  - title: Analysis of Contaminants
    element: '#tool-search'
    content: Click on the "Select" tool to open it
    placement: right
    postclick:
      - 'a[href$="/tool_runner?tool_id=Grep1"]'
  - title: Analysis of Contaminants
    element: '#tool-search'
    content: >-
      Execute the tool to select all lines <b>NOT Matching</b> the pattern
      “HUMAN”.
    position: left
  - title: Questions
    content: |-
      <ul>
        <li>Which contaminants did you identify? Where do these contaminations likely come from?</li>
        <li>What other sources of contaminants exist?</li>
        <li>How many mycoplasma proteins did you identify? Does this mean that the analyzed HeLa cells were infected with mycoplasma?</li>
        <li>How many false positives do we expect in our list?</li>
      </ul>
    backdrop: false
  - title: Key points
    content: |-
      <ul>
        <li>LC-MS/MS raw files have to be converted to mzML before using GalaxyP on most GalaxyP servers.</li>
        <li>OpenMS provides many tools for proteomic analysis and guarantees compatibility by using open file formats.</li>
        <li>OpenMS provides several thirdparty search engines and Fido for protein inference.</li>
      </ul>
    backdrop: true
